type Artist {
    id: ID!
    firstName: String
    secondName: String
    middleName: String
    birthDate: String
    birthPlace: String
    country: String
    bands: [Band]
    bandsIds:[String]
    instruments: [String]
}


input ArtistInputCreate {
    firstName: String!
    secondName: String!
    middleName: String
    birthDate: String
    birthPlace: String
    country: String!
    bandsIds: [ID]
    instruments: [String]
}

input ArtistInputUpdate {
    id: ID!
    firstName: String
    secondName: String
    middleName: String
    birthDate: String
    birthPlace: String
    country: String
    bandsIds: [ID]
    instruments: [String]
}

type Query {
    artists(limit: Int, offset: Int): [Artist]
    artist(id: ID!): Artist
}

type Mutation {
    createArtist(artist: ArtistInputCreate): Artist!
    updateArtist(artist: ArtistInputUpdate): Artist!
    deleteArtist(id: ID!): Deleted
}
