type Album {
    id: ID!
    name: String
    released: Int
    artists: [Artist]
    bands: [Band]
    tracks: [Track]
    genres: [Genre]
    image: String
}


input AlbumInputCreate {
    name: String!
    tracks: [ID!]
    artists: [ID!]
    bands: [ID!]
    genres: [ID!]
    image: String
    released: Int
}

input AlbumInputUpdate {
    id: ID!
    name: String
    released: Int
    artists: [ID]
    bands: [ID]
    tracks: [ID]
    genres: [ID]
    image: String
}

type Query {
    albums(limit: Int, offset: Int): [Album]
    album(id: ID!): Album
}

type Mutation {
    createAlbum(album: AlbumInputCreate): Album!
    updateAlbum(album: AlbumInputUpdate): Album!
    deleteAlbum(id: ID!): Deleted
}
